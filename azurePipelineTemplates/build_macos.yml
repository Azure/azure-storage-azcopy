steps:
  - task: GoTool@0
    env:
      GO111MODULE: 'on'
    inputs:
      version: $(AZCOPY_GOLANG_VERSION)

  - script: |
      CGO_ENABLED=1 go build -o "$(System.DefaultWorkingDirectory)/azcopy_darwin_amd64"
    displayName: 'Generate MacOS Build with AMD64'

  - script: |
      GOARCH=arm64 CGO_ENABLED=1 go build -o "$(System.DefaultWorkingDirectory)/azcopy_darwin_arm64"
    displayName: 'Test Cross-compiled MacOS Build with ARM64'

  - script: |
      darwin_amd_dir="$(System.DefaultWorkingDirectory)/azcopy_darwin_amd64_$(azcopy_version)"
      echo "##vso[task.setvariable variable=darwin_amd_dir]$darwin_amd_dir"
      darwin_arm_dir="$(System.DefaultWorkingDirectory)/azcopy_darwin_arm64_$(azcopy_version)"
      echo "##vso[task.setvariable variable=darwin_arm_dir]$darwin_arm_dir"
      mkdir -p $darwin_amd_dir
      mkdir -p $darwin_arm_dir
      mkdir -p $(unsigned)
    displayName: 'Create archive directories'

  - script: |
      mv $(System.DefaultWorkingDirectory)/azcopy_darwin_amd64  $(darwin_amd_dir)/azcopy
      cp NOTICE.txt $(darwin_amd_dir)
      mv $(System.DefaultWorkingDirectory)/azcopy_darwin_arm64  $(darwin_arm_dir)/azcopy
      cp NOTICE.txt $(darwin_arm_dir)
    displayName: 'Copy required files for packaging'

  - task: ArchiveFiles@2
    displayName: 'Archive MacOS AMD64 Build (must happen before signing/notarization)'
    inputs:
      rootFolderOrFile: '$(darwin_amd_dir)'
      archiveFile: '$(unsigned)/azcopy_darwin_amd64_$(azcopy_version).zip'

  - task: ArchiveFiles@2
    displayName: 'Archive MacOS ARM64 Build (must happen before signing/notarization)'
    inputs:
      rootFolderOrFile: '$(darwin_arm_dir)'
      archiveFile: '$(unsigned)/azcopy_darwin_arm64_$(azcopy_version).zip'