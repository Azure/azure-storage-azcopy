parameters:
  host_architecture: ''
  host_suffix: ''

steps:
    - checkout: self
      displayName: 'Checkout repository'

    # Custom script to install Go-lang
    - task: ShellScript@2
      inputs:
          scriptPath: "$(work_dir)/go_installer.sh"
          args: "$(root_dir)/ $(AZCOPY_GOLANG_VERSION)"
      displayName: "Installing Go tools"

    - script: |
          echo 'Running GO Vet'
          go vet
      displayName: 'Golang Vet - Linux'
      workingDirectory: $(root_dir)

    # install dependencies required for compiling azcopy
    - script: |
          sudo apt-get clean
          sudo apt-get update --fix-missing
          sudo apt-get install pkg-config libsecret-1-dev -y
          sudo apt-get install ruby ruby-dev rubygems libglib2.0-dev build-essential rpm -y
          sudo gem install dotenv -v 2.8.1
          sudo gem install fpm -V
      displayName: "Installing Dependencies"

    # get glibc version with which build is done
    - script: |
          ldd --version
      displayName: "GLIBC Version"

    - script: |
          GOARCH=${{ parameters.host_architecture }} GOOS=linux go build -tags "netgo" -o "$(root_dir)/azcopy_linux_${{ parameters.host_architecture }}"
      displayName: 'Build ${{ parameters.host_architecture }}'

    - script: |
          GOARCH=${{ parameters.host_architecture }} GOOS=linux go build -tags "netgo,se_integration" -o "$(root_dir)/azcopy_linux_se_${{ parameters.host_architecture }}"
      displayName: 'Build ${{ parameters.host_architecture }} SE Integration '

    - script: |
          sudo ls -lRt $(root_dir)/
          mkdir -p $(Build.ArtifactStagingDirectory)/binaries
          mkdir -p $(Build.ArtifactStagingDirectory)/temp
          cp $(root_dir)/azcopy_linux* $(Build.ArtifactStagingDirectory)/binaries
      displayName: 'List the binaries and add to staging directory'

    - script: |
          linux_dir="$(work_dir)/azcopy_linux_${{ parameters.host_architecture }}_$(azcopy_version)"
          echo "##vso[task.setvariable variable=linux_dir]linux_dir"
          
          linux_se_dir="$(work_dir)/azcopy_linux_se_${{ parameters.host_architecture }}_$(azcopy_version)"
          echo "##vso[task.setvariable variable=linux_se_dir]linux_se_dir"
          
          mkdir -p linux_dir
          mkdir -p linux_se_dir
          mkdir -p $(archives)
          ls -ltR $(work_dir)
      displayName: 'Create required directories'

    - script: |
          mkdir -p pkgDir/usr/bin/
          mv $(root_dir)/azcopy_linux_${{ parameters.host_architecture }} $(linux_dir)/azcopy
          mv $(root_dir)/azcopy_linux_se_${{ parameters.host_architecture }} $(linux_se_dir)/azcopy
          cp $(linux_dir)/azcopy pkgDir/usr/bin/
          cp NOTICE.txt $(linux_dir)/
          cp NOTICE.txt $(linux_se_dir)/
          cp NOTICE.txt pkgDir/usr/bin/
      displayName: 'Copy required files for packaging'

    # using fpm tool for packaging of our binary & performing post-install operations
    # for additional information about fpm refer https://fpm.readthedocs.io/en/v1.13.1/
    - script: |
          fpm -s dir -t deb -n azcopy -C pkgDir/ \
          -v $(azcopy_version) \
          --maintainer "Azcopy v-Team <azcopyvteam@microsoft.com>" \
          --url "https://github.com/Azure/azure-storage-azcopy" \
          --description "A command-line utility that is used to copy data to and from containers and file shares in Azure Storage accounts"
          mv ./azcopy*.deb ./azcopy-$(azcopy_version).${{ parameters.host_suffix }}.deb
          cp ./azcopy*.deb $(Build.ArtifactStagingDirectory)/temp
      workingDirectory: $(root_dir)
      displayName: 'Make ${{ parameters.host_architecture }} deb Package'

    - script: |
          fpm -s dir -t rpm -n azcopy --rpm-digest sha256 -C pkgDir/ \
          -v $(azcopy_version) \
          --maintainer "Azcopy v-Team <azcopyvteam@microsoft.com>" \
          --url "https://github.com/Azure/azure-storage-azcopy" \
          --description "A command-line utility that is used to copy data to and from containers and file shares in Azure Storage accounts"
          mv ./azcopy*.rpm ./azcopy-$(azcopy_version).${{ parameters.host_suffix }}.rpm
          cp ./azcopy*.rpm $(Build.ArtifactStagingDirectory)/temp
      workingDirectory: $(root_dir)
      displayName: 'Make ${{ parameters.host_architecture }} rpm Package'

    - task: ArchiveFiles@2
      displayName: 'Archive Amd Linux Build'
      inputs:
          rootFolderOrFile: '$(linux_dir)'
          archiveType: tar
          archiveFile: '$(archives)/azcopy_linux_${{ parameters.host_architecture }}_$(azcopy_version).tar.gz'
      continueOnError: true

    - task: ArchiveFiles@2
      displayName: 'Archive Partner(SE) Linux Build'
      inputs:
          rootFolderOrFile: '$(linux_se_dir)'
          archiveType: tar
          archiveFile: '$(archives)/azcopy_linux_se_${{ parameters.host_architecture }}_$(azcopy_version).tar.gz'
      continueOnError: true

    - script: |
          cp -r $(archives)/* $(Build.ArtifactStagingDirectory)/temp
      workingDirectory: $(root_dir)
      displayName: 'Add tar.gz to signing stage'

    - task: ComponentGovernanceComponentDetection@0
      inputs:
          scanType: 'Register'
          verbosity: 'Verbose'
          alertWarningLevel: 'High'
