parameters:
  - name: storage_account_name
    type: string
  - name: container_name
    type: string
  - name: orp_source_account_name
    type: string
  - name: orp_destination_account_name
    type: string
  - name: orp_source_container_name
    type: string
  - name: destination_container_name
    type: string
  - name: goos
    type: string
  - name: goarch
    type: string
  - name: cgo_enabled
    type: string
  - name: build_name
    type: string

steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: azcopytestworkloadidentity
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -e
        echo "========== Building executable =========="

        go build -cover -o "${{ parameters.build_name }}"
        if [ ! -f "./${{ parameters.build_name }}" ]; then
          echo "Error: Executable not found: ${{ parameters.build_name }}"
          exit 1
        fi
        echo "Executable built successfully: ${{ parameters.build_name }}"

        # echo "Logging in to Azure using Federated Credentials..."
        # "./${{ parameters.build_name }}" login --service-principal --application-id "$servicePrincipalId" --tenant-id "$tenantId"
        # echo "Successfully logged in..."

        ########################################################
        # Scenario 1: Blob → Pipe
        ########################################################
        echo "========== Scenario 1: BlobToPipe =========="

        echo "Creating container '${{ parameters.container_name }}' in '${{ parameters.storage_account_name }}'"
        "./${{ parameters.build_name }}" make "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}"

        echo "Creating a test file and uploading it..."
        echo "Hello, Azure!" > myfile.txt
        "./${{ parameters.build_name }}" cp myfile.txt "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}"

        echo "Copying the file back using BlobPipe..."
        "./${{ parameters.build_name }}" cp \
          "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}/myfile.txt" \
          --from-to=BlobPipe --check-md5 FailIfDifferentOrMissing > filename

        if [ $? -eq 0 ]; then
          echo "Scenario 1 executed successfully."
        else
          echo "Scenario 1 failed with exit code $?"
        fi

        echo "Cleaning up Scenario 1..."
        "./${{ parameters.build_name }}" rm "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}/myfile.txt"
        az storage container delete \
          --name "${{ parameters.container_name }}" \
          --account-name "${{ parameters.storage_account_name }}" \
          --yes

        ########################################################
        # Scenario 2: Object Replication Policy Copy
        ########################################################
        echo "========== Scenario 2: ORP Source → Destination =========="

        echo "Creating a test file and uploading to ORP source container..."
        echo "Hello, Azure!" > myfile.txt
        "./${{ parameters.build_name }}" cp \
          myfile.txt \
          "https://${{ parameters.orp_source_account_name }}.blob.core.windows.net/${{ parameters.orp_source_container_name }}"

        echo "Copying from ORP source to destination container..."
        "./${{ parameters.build_name }}" cp \
          "https://${{ parameters.orp_source_account_name }}.blob.core.windows.net/${{ parameters.orp_source_container_name }}" \
          "https://${{ parameters.orp_destination_account_name }}.blob.core.windows.net/${{ parameters.destination_container_name }}" \
          --recursive

        if [ $? -eq 0 ]; then
          echo "Scenario 2 executed successfully."
        else
          echo "Scenario 2 failed with exit code $?"
        fi

        echo "Cleaning up Scenario 2..."
        "./${{ parameters.build_name }}" rm \
          "https://${{ parameters.orp_destination_account_name }}.blob.core.windows.net/${{ parameters.destination_container_name }}/myfile.txt"
        "./${{ parameters.build_name }}" rm \
          "https://${{ parameters.orp_source_account_name }}.blob.core.windows.net/${{ parameters.orp_source_container_name }}/myfile.txt"

      displayName: "Run Scenarios"
    env:
      GOOS: ${{ parameters.goos }}
      GOARCH: ${{ parameters.goarch }}
      CGO_ENABLED: ${{ parameters.cgo_enabled }}
      NEW_E2E_ENVIRONMENT: "AzurePipeline"
