parameters:
  - name: storage_account_name
    type: string
  - name: container_name
    type: string

steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: azcopyTestScenarios
      addSpnToEnvironment: true
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Right now we dont have this fix available in the older version of AzCopy. So, we are using the latest version of AzCopy to run the scenarios.
        # We will update this workaround once the fix is available in the older version of AzCopy.

        # Print "Building executable"
        Write-Output "Building executable"
        
        # Set platform-specific environment variables and tags
        $tags = ""
        $suffix = ""
        $build_name = ""
        $display_name = ""
        if ($IsWindows) {
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          $build_name = "azcopy_windows_amd64.exe"
          $env:AZCOPY_AUTO_LOGIN_TYPE="AzCLI"
        } elseif ($IsLinux) {
          $env:GOOS = "linux"
          $env:GOARCH = "amd64"
          $build_name = "azcopy_linux_amd64"
        } elseif ($IsMacOS) {
          $env:GOOS = "darwin"
          $env:GOARCH = "amd64"
          $env:CGO_ENABLED = "1"
          $build_name = "azcopy_darwin_amd64"
        } else {
          Write-Error "Unsupported operating system"
          exit 1
        }

        $env:AZCOPY_AUTO_LOGIN_TYPE="AzCLI"

        go build -cover -o $build_name

        & $build_name "make" "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}"
        echo "Hello, Azure!" > myfile.txt
        & $build_name "cp" "myfile.txt" "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}"
        & $build_name "cp" "https://${{ parameters.storage_account_name }}.blob.core.windows.net/${{ parameters.container_name }}/myfile.txt" "--from-to=BlobPipe" "--check-md5" "FailIfDifferentOrMissing" > filename

        if ($LASTEXITCODE -eq 0) {
            Write-Output "AzCopy command succeeded."
        } else {
            Write-Error "AzCopy command failed with exit code $LASTEXITCODE."
        }
    displayName: 'Run Scenarios to check if older version of AzCopy appends version check error message to piped download'
