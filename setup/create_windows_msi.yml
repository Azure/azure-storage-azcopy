parameters:
  working_dir: ''
  build_dir: ''
  msi_dir: ''

steps:
- powershell: |
    # Check if Chocolatey is installed
    if (!(Get-Command choco.exe -ErrorAction SilentlyContinue)) {
        Write-Host "Chocolatey is not installed. Installing Chocolatey..."
        Set-ExecutionPolicy Bypass -Scope Process -Force; 
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; 
        Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
    } else {
        Write-Host "Chocolatey is already installed."
    }

    # Install WiX Toolset using Chocolatey
    Write-Host "Installing WiX Toolset via Chocolatey..."
    choco install wixtoolset -y
    Write-Host "WiX Toolset installation completed."
  displayName: 'Install Chocolatey and WiX Toolset'

- powershell: |
    # PowerShell Script to create MSI in an Azure Pipeline

    # Step 1: Set Variables
    $msiDir = "${{ parameters.msi_dir }}"
    $workDir = "${{ parameters.working_dir }}"
    $wixToolsPath = (where.exe candle.exe)  # Path to WiX toolset binaries
    $wxsFilePath = "$workDir\azcopy.wxs"
    $wixObjPath = "$msiDir\azcopy.wixobj"
    $outputMsi = "${{ parameters.build_dir }}\azcopy.msi"

    Write-Host "Work dir: $workDir  $wixToolsPath"
    cd $msiDir

    # Step 2: Update the fields in the .wxs file
    Write-Host "Updating Uuid in .wxs file..."
    $uuid = [guid]::NewGuid().Guid.ToString()

    # Load the XML file with namespace handling
    [xml]$wixXml = Get-Content $wxsFilePath
    $namespace = @{ wix = "http://schemas.microsoft.com/wix/2006/wi" }

    # Update fields using the namespace
    $productNode = $wixXml.SelectSingleNode("//wix:Product", $namespace)
    $productNode.Name = "azcopy"
    $productNode.Version = "10.26.0"  # Update version as needed
    $productNode.Manufacturer = "Updated Manufacturer"
    $productNode.UpgradeCode = $uuid

    # Locate the Component node using the namespace
    $component = $wixXml.SelectSingleNode("//wix:Directory[@Id='INSTALLDIR']/wix:Component", $namespace)

    # Check if Component element exists
    if ($component) {
        # Check if Guid attribute exists and set it, or add it if missing
        if ($component.Attributes["Guid"]) {
            $component.Attributes["Guid"].Value = $uuid
        } else {
            $component.SetAttribute("Guid", $uuid)
        }
        Write-Host "Guid attribute updated successfully."
    } else {
        Write-Host "Component element not found in XML structure."
    }

    # Update the file source path
    $file = $component.SelectSingleNode("wix:File", $namespace)
    $file.Source = "$workDir\azcopy.exe" 

 
