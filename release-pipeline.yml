variables:
  AZCOPY_GOLANG_VERSION: '1.21.8'

parameters:
  - name: tag
    displayName: 'New Release Tag'
    type: string
    default: 'azcopy-'

  - name: publish_to_container
    displayName: 'Publish To Container'
    type: boolean
    default: false

  - name: post_release
    displayName: 'Post Release on Github'
    type: boolean
    default: false

  - name: publish_artifacts
    displayName: 'Publish Artifacts to Linux Repos'
    type: boolean
    default: false

  - name: draft
    displayName: 'Post as Draft Release'
    type: boolean
    default: false

  - name: prerelease
    displayName: 'Post as PreRelease'
    type: boolean
    default: false

  - name: update_version
    displayName: 'Update Version'
    type: boolean
    default: false

# Do not trigger this pipeline automatically
trigger: none
pr: none

stages:
  - stage: BuildArtifacts
    jobs:
      - job: Set_0
        timeoutInMinutes: 120
        strategy:
          matrix:
            Ubuntu_arm64:
              vmImage: 'ubuntu-20.04'
              container: 'test-cnt-ubn-20'
              AgentName: 'blobfuse-ubn20-arm64'

        pool:
          name: "blobfuse-ubn-arm64-pool"
          demands:
            - ImageOverride -equals $(AgentName)

        variables:
          - name: root_dir
            value: '$(System.DefaultWorkingDirectory)'
          - name: work_dir
            value: '$(Build.SourcesDirectory)'
          - name: archives
            value: $(root_dir)/archives

        steps:
          - checkout: self
            displayName: 'Checkout repository'

          - task: GithubRelease@1
            inputs:
              githubConnection: 'dphulkar-msft-github-rel'
              repositoryName: 'dphulkar-msft/azure-storage-azcopy'
              action: 'edit'

              target: '$(Build.SourceVersion)'
              tagSource: 'userSpecifiedTag'

              title: ${{ parameters.tag }}
              tag: ${{ parameters.tag }}
              
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'
              isDraft: ${{ parameters.draft }}
              isPreRelease: ${{ parameters.prerelease }}
              assetUploadMode: replace