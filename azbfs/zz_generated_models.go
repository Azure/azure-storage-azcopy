package azbfs

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"io"
	"net/http"
	"reflect"
	"strings"
)

// concatenates a slice of const values with the specified separator between each item
func joinConst(s interface{}, sep string) string {
	v := reflect.ValueOf(s)
	if v.Kind() != reflect.Slice && v.Kind() != reflect.Array {
		panic("s wasn't a slice or array")
	}
	ss := make([]string, 0, v.Len())
	for i := 0; i < v.Len(); i++ {
		ss = append(ss, v.Index(i).String())
	}
	return strings.Join(ss, sep)
}

// CreateFilesystemResponse ...
type CreateFilesystemResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (cfr CreateFilesystemResponse) Response() *http.Response {
	return cfr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (cfr CreateFilesystemResponse) StatusCode() int {
	return cfr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (cfr CreateFilesystemResponse) Status() string {
	return cfr.rawResponse.Status
}

// Date returns the value for header Date.
func (cfr CreateFilesystemResponse) Date() string {
	return cfr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (cfr CreateFilesystemResponse) ETag() string {
	return cfr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (cfr CreateFilesystemResponse) LastModified() string {
	return cfr.rawResponse.Header.Get("Last-Modified")
}

// XMsNamespaceEnabled returns the value for header x-ms-namespace-enabled.
func (cfr CreateFilesystemResponse) XMsNamespaceEnabled() string {
	return cfr.rawResponse.Header.Get("x-ms-namespace-enabled")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (cfr CreateFilesystemResponse) XMsRequestID() string {
	return cfr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (cfr CreateFilesystemResponse) XMsVersion() string {
	return cfr.rawResponse.Header.Get("x-ms-version")
}

// CreatePathResponse ...
type CreatePathResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (cpr CreatePathResponse) Response() *http.Response {
	return cpr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (cpr CreatePathResponse) StatusCode() int {
	return cpr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (cpr CreatePathResponse) Status() string {
	return cpr.rawResponse.Status
}

// ContentLength returns the value for header Content-Length.
func (cpr CreatePathResponse) ContentLength() string {
	return cpr.rawResponse.Header.Get("Content-Length")
}

// Date returns the value for header Date.
func (cpr CreatePathResponse) Date() string {
	return cpr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (cpr CreatePathResponse) ETag() string {
	return cpr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (cpr CreatePathResponse) LastModified() string {
	return cpr.rawResponse.Header.Get("Last-Modified")
}

// XMsContinuation returns the value for header x-ms-continuation.
func (cpr CreatePathResponse) XMsContinuation() string {
	return cpr.rawResponse.Header.Get("x-ms-continuation")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (cpr CreatePathResponse) XMsRequestID() string {
	return cpr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (cpr CreatePathResponse) XMsVersion() string {
	return cpr.rawResponse.Header.Get("x-ms-version")
}

// DeleteFilesystemResponse ...
type DeleteFilesystemResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (dfr DeleteFilesystemResponse) Response() *http.Response {
	return dfr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (dfr DeleteFilesystemResponse) StatusCode() int {
	return dfr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (dfr DeleteFilesystemResponse) Status() string {
	return dfr.rawResponse.Status
}

// Date returns the value for header Date.
func (dfr DeleteFilesystemResponse) Date() string {
	return dfr.rawResponse.Header.Get("Date")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (dfr DeleteFilesystemResponse) XMsRequestID() string {
	return dfr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (dfr DeleteFilesystemResponse) XMsVersion() string {
	return dfr.rawResponse.Header.Get("x-ms-version")
}

// DeletePathResponse ...
type DeletePathResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (dpr DeletePathResponse) Response() *http.Response {
	return dpr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (dpr DeletePathResponse) StatusCode() int {
	return dpr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (dpr DeletePathResponse) Status() string {
	return dpr.rawResponse.Status
}

// Date returns the value for header Date.
func (dpr DeletePathResponse) Date() string {
	return dpr.rawResponse.Header.Get("Date")
}

// XMsContinuation returns the value for header x-ms-continuation.
func (dpr DeletePathResponse) XMsContinuation() string {
	return dpr.rawResponse.Header.Get("x-ms-continuation")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (dpr DeletePathResponse) XMsRequestID() string {
	return dpr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (dpr DeletePathResponse) XMsVersion() string {
	return dpr.rawResponse.Header.Get("x-ms-version")
}

// ErrorSchema ...
type ErrorSchema struct {
	// Error - The service error response object.
	Error *ErrorSchemaError `json:"error,omitempty"`
}

// ErrorSchemaError - The service error response object.
type ErrorSchemaError struct {
	// Code - The service error code.
	Code *string `json:"code,omitempty"`
	// Message - The service error message.
	Message *string `json:"message,omitempty"`
}

// GetFilesystemPropertiesResponse ...
type GetFilesystemPropertiesResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (gfpr GetFilesystemPropertiesResponse) Response() *http.Response {
	return gfpr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (gfpr GetFilesystemPropertiesResponse) StatusCode() int {
	return gfpr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (gfpr GetFilesystemPropertiesResponse) Status() string {
	return gfpr.rawResponse.Status
}

// Date returns the value for header Date.
func (gfpr GetFilesystemPropertiesResponse) Date() string {
	return gfpr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (gfpr GetFilesystemPropertiesResponse) ETag() string {
	return gfpr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (gfpr GetFilesystemPropertiesResponse) LastModified() string {
	return gfpr.rawResponse.Header.Get("Last-Modified")
}

// XMsNamespaceEnabled returns the value for header x-ms-namespace-enabled.
func (gfpr GetFilesystemPropertiesResponse) XMsNamespaceEnabled() string {
	return gfpr.rawResponse.Header.Get("x-ms-namespace-enabled")
}

// XMsProperties returns the value for header x-ms-properties.
func (gfpr GetFilesystemPropertiesResponse) XMsProperties() string {
	return gfpr.rawResponse.Header.Get("x-ms-properties")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (gfpr GetFilesystemPropertiesResponse) XMsRequestID() string {
	return gfpr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (gfpr GetFilesystemPropertiesResponse) XMsVersion() string {
	return gfpr.rawResponse.Header.Get("x-ms-version")
}

// GetPathPropertiesResponse ...
type GetPathPropertiesResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (gppr GetPathPropertiesResponse) Response() *http.Response {
	return gppr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (gppr GetPathPropertiesResponse) StatusCode() int {
	return gppr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (gppr GetPathPropertiesResponse) Status() string {
	return gppr.rawResponse.Status
}

// AcceptRanges returns the value for header Accept-Ranges.
func (gppr GetPathPropertiesResponse) AcceptRanges() string {
	return gppr.rawResponse.Header.Get("Accept-Ranges")
}

// CacheControl returns the value for header Cache-Control.
func (gppr GetPathPropertiesResponse) CacheControl() string {
	return gppr.rawResponse.Header.Get("Cache-Control")
}

// ContentDisposition returns the value for header Content-Disposition.
func (gppr GetPathPropertiesResponse) ContentDisposition() string {
	return gppr.rawResponse.Header.Get("Content-Disposition")
}

// ContentEncoding returns the value for header Content-Encoding.
func (gppr GetPathPropertiesResponse) ContentEncoding() string {
	return gppr.rawResponse.Header.Get("Content-Encoding")
}

// ContentLanguage returns the value for header Content-Language.
func (gppr GetPathPropertiesResponse) ContentLanguage() string {
	return gppr.rawResponse.Header.Get("Content-Language")
}

// ContentLength returns the value for header Content-Length.
func (gppr GetPathPropertiesResponse) ContentLength() string {
	return gppr.rawResponse.Header.Get("Content-Length")
}

// ContentRange returns the value for header Content-Range.
func (gppr GetPathPropertiesResponse) ContentRange() string {
	return gppr.rawResponse.Header.Get("Content-Range")
}

// ContentType returns the value for header Content-Type.
func (gppr GetPathPropertiesResponse) ContentType() string {
	return gppr.rawResponse.Header.Get("Content-Type")
}

// Date returns the value for header Date.
func (gppr GetPathPropertiesResponse) Date() string {
	return gppr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (gppr GetPathPropertiesResponse) ETag() string {
	return gppr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (gppr GetPathPropertiesResponse) LastModified() string {
	return gppr.rawResponse.Header.Get("Last-Modified")
}

// XMsACL returns the value for header x-ms-acl.
func (gppr GetPathPropertiesResponse) XMsACL() string {
	return gppr.rawResponse.Header.Get("x-ms-acl")
}

// XMsGroup returns the value for header x-ms-group.
func (gppr GetPathPropertiesResponse) XMsGroup() string {
	return gppr.rawResponse.Header.Get("x-ms-group")
}

// XMsLeaseDuration returns the value for header x-ms-lease-duration.
func (gppr GetPathPropertiesResponse) XMsLeaseDuration() string {
	return gppr.rawResponse.Header.Get("x-ms-lease-duration")
}

// XMsLeaseState returns the value for header x-ms-lease-state.
func (gppr GetPathPropertiesResponse) XMsLeaseState() string {
	return gppr.rawResponse.Header.Get("x-ms-lease-state")
}

// XMsLeaseStatus returns the value for header x-ms-lease-status.
func (gppr GetPathPropertiesResponse) XMsLeaseStatus() string {
	return gppr.rawResponse.Header.Get("x-ms-lease-status")
}

// XMsOwner returns the value for header x-ms-owner.
func (gppr GetPathPropertiesResponse) XMsOwner() string {
	return gppr.rawResponse.Header.Get("x-ms-owner")
}

// XMsPermissions returns the value for header x-ms-permissions.
func (gppr GetPathPropertiesResponse) XMsPermissions() string {
	return gppr.rawResponse.Header.Get("x-ms-permissions")
}

// XMsProperties returns the value for header x-ms-properties.
func (gppr GetPathPropertiesResponse) XMsProperties() string {
	return gppr.rawResponse.Header.Get("x-ms-properties")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (gppr GetPathPropertiesResponse) XMsRequestID() string {
	return gppr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsResourceType returns the value for header x-ms-resource-type.
func (gppr GetPathPropertiesResponse) XMsResourceType() string {
	return gppr.rawResponse.Header.Get("x-ms-resource-type")
}

// XMsVersion returns the value for header x-ms-version.
func (gppr GetPathPropertiesResponse) XMsVersion() string {
	return gppr.rawResponse.Header.Get("x-ms-version")
}

// LeasePathResponse ...
type LeasePathResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (lpr LeasePathResponse) Response() *http.Response {
	return lpr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (lpr LeasePathResponse) StatusCode() int {
	return lpr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (lpr LeasePathResponse) Status() string {
	return lpr.rawResponse.Status
}

// Date returns the value for header Date.
func (lpr LeasePathResponse) Date() string {
	return lpr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (lpr LeasePathResponse) ETag() string {
	return lpr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (lpr LeasePathResponse) LastModified() string {
	return lpr.rawResponse.Header.Get("Last-Modified")
}

// XMsLeaseID returns the value for header x-ms-lease-id.
func (lpr LeasePathResponse) XMsLeaseID() string {
	return lpr.rawResponse.Header.Get("x-ms-lease-id")
}

// XMsLeaseTime returns the value for header x-ms-lease-time.
func (lpr LeasePathResponse) XMsLeaseTime() string {
	return lpr.rawResponse.Header.Get("x-ms-lease-time")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (lpr LeasePathResponse) XMsRequestID() string {
	return lpr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (lpr LeasePathResponse) XMsVersion() string {
	return lpr.rawResponse.Header.Get("x-ms-version")
}

// ListEntrySchema ...
type ListEntrySchema struct {
	Name          *string `json:"name,omitempty"`
	IsDirectory   *bool   `json:"isDirectory,string,omitempty"`
	LastModified  *string `json:"lastModified,omitempty"`
	ETag          *string `json:"eTag,omitempty"`
	ContentLength *int64  `json:"contentLength,string,omitempty"`
	Owner         *string `json:"owner,omitempty"`
	Group         *string `json:"group,omitempty"`
	Permissions   *string `json:"permissions,omitempty"`
}

// ListFilesystemEntry ...
type ListFilesystemEntry struct {
	Name         *string `json:"name,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	ETag         *string `json:"eTag,omitempty"`
}

// ListFilesystemSchema ...
type ListFilesystemSchema struct {
	rawResponse *http.Response
	Filesystems []ListFilesystemEntry `json:"filesystems,omitempty"`
}

// Response returns the raw HTTP response object.
func (lfs ListFilesystemSchema) Response() *http.Response {
	return lfs.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (lfs ListFilesystemSchema) StatusCode() int {
	return lfs.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (lfs ListFilesystemSchema) Status() string {
	return lfs.rawResponse.Status
}

// ContentType returns the value for header Content-Type.
func (lfs ListFilesystemSchema) ContentType() string {
	return lfs.rawResponse.Header.Get("Content-Type")
}

// Date returns the value for header Date.
func (lfs ListFilesystemSchema) Date() string {
	return lfs.rawResponse.Header.Get("Date")
}

// XMsContinuation returns the value for header x-ms-continuation.
func (lfs ListFilesystemSchema) XMsContinuation() string {
	return lfs.rawResponse.Header.Get("x-ms-continuation")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (lfs ListFilesystemSchema) XMsRequestID() string {
	return lfs.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (lfs ListFilesystemSchema) XMsVersion() string {
	return lfs.rawResponse.Header.Get("x-ms-version")
}

// ListSchema ...
type ListSchema struct {
	rawResponse *http.Response
	Paths       []ListEntrySchema `json:"paths,omitempty"`
}

// Response returns the raw HTTP response object.
func (ls ListSchema) Response() *http.Response {
	return ls.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (ls ListSchema) StatusCode() int {
	return ls.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (ls ListSchema) Status() string {
	return ls.rawResponse.Status
}

// Date returns the value for header Date.
func (ls ListSchema) Date() string {
	return ls.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (ls ListSchema) ETag() string {
	return ls.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (ls ListSchema) LastModified() string {
	return ls.rawResponse.Header.Get("Last-Modified")
}

// XMsContinuation returns the value for header x-ms-continuation.
func (ls ListSchema) XMsContinuation() string {
	return ls.rawResponse.Header.Get("x-ms-continuation")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (ls ListSchema) XMsRequestID() string {
	return ls.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (ls ListSchema) XMsVersion() string {
	return ls.rawResponse.Header.Get("x-ms-version")
}

// ReadPathResponse ...
type ReadPathResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (rpr ReadPathResponse) Response() *http.Response {
	return rpr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (rpr ReadPathResponse) StatusCode() int {
	return rpr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (rpr ReadPathResponse) Status() string {
	return rpr.rawResponse.Status
}

// Body returns the raw HTTP response object's Body.
func (rpr ReadPathResponse) Body() io.ReadCloser {
	return rpr.rawResponse.Body
}

// AcceptRanges returns the value for header Accept-Ranges.
func (rpr ReadPathResponse) AcceptRanges() string {
	return rpr.rawResponse.Header.Get("Accept-Ranges")
}

// CacheControl returns the value for header Cache-Control.
func (rpr ReadPathResponse) CacheControl() string {
	return rpr.rawResponse.Header.Get("Cache-Control")
}

// ContentDisposition returns the value for header Content-Disposition.
func (rpr ReadPathResponse) ContentDisposition() string {
	return rpr.rawResponse.Header.Get("Content-Disposition")
}

// ContentEncoding returns the value for header Content-Encoding.
func (rpr ReadPathResponse) ContentEncoding() string {
	return rpr.rawResponse.Header.Get("Content-Encoding")
}

// ContentLanguage returns the value for header Content-Language.
func (rpr ReadPathResponse) ContentLanguage() string {
	return rpr.rawResponse.Header.Get("Content-Language")
}

// ContentLength returns the value for header Content-Length.
func (rpr ReadPathResponse) ContentLength() string {
	return rpr.rawResponse.Header.Get("Content-Length")
}

// ContentRange returns the value for header Content-Range.
func (rpr ReadPathResponse) ContentRange() string {
	return rpr.rawResponse.Header.Get("Content-Range")
}

// ContentType returns the value for header Content-Type.
func (rpr ReadPathResponse) ContentType() string {
	return rpr.rawResponse.Header.Get("Content-Type")
}

// Date returns the value for header Date.
func (rpr ReadPathResponse) Date() string {
	return rpr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (rpr ReadPathResponse) ETag() string {
	return rpr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (rpr ReadPathResponse) LastModified() string {
	return rpr.rawResponse.Header.Get("Last-Modified")
}

// XMsLeaseDuration returns the value for header x-ms-lease-duration.
func (rpr ReadPathResponse) XMsLeaseDuration() string {
	return rpr.rawResponse.Header.Get("x-ms-lease-duration")
}

// XMsLeaseState returns the value for header x-ms-lease-state.
func (rpr ReadPathResponse) XMsLeaseState() string {
	return rpr.rawResponse.Header.Get("x-ms-lease-state")
}

// XMsLeaseStatus returns the value for header x-ms-lease-status.
func (rpr ReadPathResponse) XMsLeaseStatus() string {
	return rpr.rawResponse.Header.Get("x-ms-lease-status")
}

// XMsProperties returns the value for header x-ms-properties.
func (rpr ReadPathResponse) XMsProperties() string {
	return rpr.rawResponse.Header.Get("x-ms-properties")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (rpr ReadPathResponse) XMsRequestID() string {
	return rpr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsResourceType returns the value for header x-ms-resource-type.
func (rpr ReadPathResponse) XMsResourceType() string {
	return rpr.rawResponse.Header.Get("x-ms-resource-type")
}

// XMsVersion returns the value for header x-ms-version.
func (rpr ReadPathResponse) XMsVersion() string {
	return rpr.rawResponse.Header.Get("x-ms-version")
}

// SetFilesystemPropertiesResponse ...
type SetFilesystemPropertiesResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (sfpr SetFilesystemPropertiesResponse) Response() *http.Response {
	return sfpr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (sfpr SetFilesystemPropertiesResponse) StatusCode() int {
	return sfpr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (sfpr SetFilesystemPropertiesResponse) Status() string {
	return sfpr.rawResponse.Status
}

// Date returns the value for header Date.
func (sfpr SetFilesystemPropertiesResponse) Date() string {
	return sfpr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (sfpr SetFilesystemPropertiesResponse) ETag() string {
	return sfpr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (sfpr SetFilesystemPropertiesResponse) LastModified() string {
	return sfpr.rawResponse.Header.Get("Last-Modified")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (sfpr SetFilesystemPropertiesResponse) XMsRequestID() string {
	return sfpr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (sfpr SetFilesystemPropertiesResponse) XMsVersion() string {
	return sfpr.rawResponse.Header.Get("x-ms-version")
}

// UpdatePathResponse ...
type UpdatePathResponse struct {
	rawResponse *http.Response
}

// Response returns the raw HTTP response object.
func (upr UpdatePathResponse) Response() *http.Response {
	return upr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (upr UpdatePathResponse) StatusCode() int {
	return upr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (upr UpdatePathResponse) Status() string {
	return upr.rawResponse.Status
}

// AcceptRanges returns the value for header Accept-Ranges.
func (upr UpdatePathResponse) AcceptRanges() string {
	return upr.rawResponse.Header.Get("Accept-Ranges")
}

// CacheControl returns the value for header Cache-Control.
func (upr UpdatePathResponse) CacheControl() string {
	return upr.rawResponse.Header.Get("Cache-Control")
}

// ContentDisposition returns the value for header Content-Disposition.
func (upr UpdatePathResponse) ContentDisposition() string {
	return upr.rawResponse.Header.Get("Content-Disposition")
}

// ContentEncoding returns the value for header Content-Encoding.
func (upr UpdatePathResponse) ContentEncoding() string {
	return upr.rawResponse.Header.Get("Content-Encoding")
}

// ContentLanguage returns the value for header Content-Language.
func (upr UpdatePathResponse) ContentLanguage() string {
	return upr.rawResponse.Header.Get("Content-Language")
}

// ContentLength returns the value for header Content-Length.
func (upr UpdatePathResponse) ContentLength() string {
	return upr.rawResponse.Header.Get("Content-Length")
}

// ContentRange returns the value for header Content-Range.
func (upr UpdatePathResponse) ContentRange() string {
	return upr.rawResponse.Header.Get("Content-Range")
}

// ContentType returns the value for header Content-Type.
func (upr UpdatePathResponse) ContentType() string {
	return upr.rawResponse.Header.Get("Content-Type")
}

// Date returns the value for header Date.
func (upr UpdatePathResponse) Date() string {
	return upr.rawResponse.Header.Get("Date")
}

// ETag returns the value for header ETag.
func (upr UpdatePathResponse) ETag() string {
	return upr.rawResponse.Header.Get("ETag")
}

// LastModified returns the value for header Last-Modified.
func (upr UpdatePathResponse) LastModified() string {
	return upr.rawResponse.Header.Get("Last-Modified")
}

// XMsProperties returns the value for header x-ms-properties.
func (upr UpdatePathResponse) XMsProperties() string {
	return upr.rawResponse.Header.Get("x-ms-properties")
}

// XMsRequestID returns the value for header x-ms-request-id.
func (upr UpdatePathResponse) XMsRequestID() string {
	return upr.rawResponse.Header.Get("x-ms-request-id")
}

// XMsVersion returns the value for header x-ms-version.
func (upr UpdatePathResponse) XMsVersion() string {
	return upr.rawResponse.Header.Get("x-ms-version")
}
